Angular Components
==================

=>Components are the building blocks of Angular applications
=>Responsible for UI and the behavior of a specific part of the application

Components Lifecycle
====================
=>Each component has a lifecycle, which includes various stages from creation to destruction
=>Below are lifecycle hooks in the order they are executed

1. ngOnChanges():
	=>This hook is called when the input properties of the component change
	=>It receives SimpleChanges object, which contains information of previous and current values of input properties

2. ngOnInit():
	=>This hook is called once after the first ngOnChanges() call
	=>Used for initialization logic [data fetch from server]

3. ngDoCheck():
	=>Called every time Angular checks for changes in the component
	=>It is often used for detecting and reacting to changes in the component state

4. ngAfterContentInit():
	=>Called after Angular projects the content/data of the component into its view
	=>Used for initialization logic that depends on the content projected into the component

5. ngAfterContentChecked():
	=>Called every time Angular checks for changes in the content projected into the component

6. ngAfterViewInit():
	=>Called after the component's view has been initialized
	=>Init logic that depends on Parent View and its Child Views

7. ngAfterViewChecked():
	=>Called every time Angular checks for changes in the component view and its child views

8. ngOnDestroy():
	=>Called just before the component is destroyed
	=>Used for cleanup logic, ie. observables or releasing resources




